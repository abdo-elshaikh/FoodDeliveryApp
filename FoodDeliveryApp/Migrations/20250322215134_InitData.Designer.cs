// <auto-generated />
using System;
using FoodDeliveryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodDeliveryApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250322215134_InitData")]
    partial class InitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FoodDeliveryApp.Models.Category", b =>
                {
                    b.Property<int>("CateqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CateqId"));

                    b.Property<string>("CateqDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("CateqImage")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("CateqName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CateqId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Customer", b =>
                {
                    b.Property<string>("CustId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Employee", b =>
                {
                    b.Property<string>("EmpId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("EmpId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CateqId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("ItemImage")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ItemId");

                    b.HasIndex("CateqId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Order", b =>
                {
                    b.Property<int>("OrdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrdId"));

                    b.Property<string>("CustId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("OrdDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("OrdSum")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("OrdId");

                    b.HasIndex("CustId");

                    b.HasIndex("EmpId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrdDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrdDetId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrdAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("OrdDiscount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("OrdId")
                        .HasColumnType("int");

                    b.Property<int>("OrdQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("OrdTax")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("OrdDetId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrdId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserCategory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Customer", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("FoodDeliveryApp.Models.Customer", "CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Employee", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("FoodDeliveryApp.Models.Employee", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Item", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CateqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Order", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApp.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.OrderDetail", b =>
                {
                    b.HasOne("FoodDeliveryApp.Models.Item", "Item")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FoodDeliveryApp.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Item", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FoodDeliveryApp.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
