/**
 * FoodDeliveryApp - Consolidated JavaScript
 * All functionality combined into a single, optimized file
 */

document.addEventListener('DOMContentLoaded', function() {
    // Theme Management
    initTheme();
    
    // UI Components
    initNavigation();
    initAnimations();
    
    // Core Functionality
    initCart();
    initSearch();
    initRestaurantFeatures();
});

// Theme Management
function initTheme() {
    const themeToggleBtn = document.getElementById('theme-toggle') || document.getElementById('btnToggleColorMode');
    const body = document.body;
    let themeIcon = themeToggleBtn ? themeToggleBtn.querySelector('i') : null;
    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    function setTheme(mode) {
        if (mode === 'dark') {
            body.classList.add('dark-mode');
            if (themeIcon) themeIcon.className = 'bi bi-moon-fill text-lg';
        } else {
            body.classList.remove('dark-mode');
            if (themeIcon) themeIcon.className = 'bi bi-sun-fill text-lg';
        }
        localStorage.setItem('theme', mode);
    }
    
    if (savedTheme) {
        setTheme(savedTheme);
    } else if (prefersDark) {
        setTheme('dark');
    } else {
        setTheme('light');
    }
    
    if (themeToggleBtn) {
        themeToggleBtn.addEventListener('click', function() {
            const isDark = body.classList.toggle('dark-mode');
            setTheme(isDark ? 'dark' : 'light');
        });
    }
}

// Navigation and UI Components
function initNavigation() {
    // Navbar toggle for mobile
    const navbarToggle = document.getElementById('navbar-toggle');
    const navbarMenu = document.getElementById('navbar-mobile-menu');
    if (navbarToggle && navbarMenu) {
        navbarToggle.addEventListener('click', () => {
            navbarMenu.classList.toggle('hidden');
        });
    }

    // Navbar scroll behavior
    const navbar = document.getElementById('navbar');
    if (navbar) {
        window.addEventListener('scroll', () => {
            navbar.classList.toggle('navbar-scrolled', window.scrollY > 50);
        });
    }

    // Back to top button
    const backToTop = document.getElementById('back-to-top');
    if (backToTop) {
        window.addEventListener('scroll', () => {
            backToTop.classList.toggle('hidden', window.scrollY <= 100);
        });

        backToTop.addEventListener('click', (e) => {
            e.preventDefault();
            window.scrollTo({top: 0, behavior: 'smooth'});
        });
    }
}

// Animation Utilities
function initAnimations() {
    // Animate elements on scroll
    const animateOnScroll = () => {
        const elements = document.querySelectorAll('.animate-fade-in');
        elements.forEach(element => {
            const elementTop = element.getBoundingClientRect().top;
            const elementBottom = element.getBoundingClientRect().bottom;
            const isVisible = (elementTop < window.innerHeight) && (elementBottom >= 0);
            
            if (isVisible) {
                element.classList.add('visible');
            }
        });
    };

    // Initialize animations
    window.addEventListener('scroll', animateOnScroll);
    window.addEventListener('load', animateOnScroll);

    // Add animation classes to elements with data-delay
    document.querySelectorAll('[data-delay]').forEach(element => {
        const delay = element.dataset.delay;
        element.style.animationDelay = `${delay}ms`;
    });
    
    // Initialize restaurant card animations
    const restaurantCards = document.querySelectorAll('.restaurant-card');
    if (restaurantCards.length > 0) {
        restaurantCards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.animationDelay = `${index * 0.1}s`;
            card.classList.add('animate-fade-in');
        });
    }
}

// Show toast message
function showToast(message, type = 'info') {
    let toastContainer = document.getElementById('toast-container');
    if (!toastContainer) {
        toastContainer = document.createElement('div');
        toastContainer.id = 'toast-container';
        toastContainer.className = 'fixed top-4 right-4 z-50 flex flex-col gap-3';
        document.body.appendChild(toastContainer);
    }

    const toast = document.createElement('div');
    toast.className = `toast bg-${type === 'success' ? 'green' : type === 'danger' ? 'red' : 'blue'}-500/90 text-white p-4 rounded-lg shadow-xl`;
    toast.innerHTML = `
        <div class="flex items-center">
            <div class="flex-1">${message}</div>
            <button class="text-white hover:text-gray-200" data-dismiss="toast" aria-label="Close">Ã—</button>
        </div>
    `;

    toastContainer.appendChild(toast);
    
    // Auto-dismiss after 4 seconds
    setTimeout(() => toast.remove(), 4000);

    toast.querySelector('[data-dismiss="toast"]').addEventListener('click', () => toast.remove());
}

// Shopping Cart Functionality
function initCart() {
    const cartDropdown = document.querySelector('.cart-dropdown');
    const cartMenu = document.querySelector('.cart-dropdown-menu');
    const cartItems = document.querySelector('.cart-items-container');
    
    // Toggle cart dropdown
    if (cartDropdown && cartMenu) {
        cartDropdown.addEventListener('click', (e) => {
            e.preventDefault();
            cartMenu.classList.toggle('show');
        });
        
        // Close cart when clicking outside
        document.addEventListener('click', (e) => {
            if (!cartDropdown.contains(e.target)) {
                cartMenu.classList.remove('show');
            }
        });
    }
    
    // Remove item from cart
    if (cartItems) {
        cartItems.addEventListener('click', (e) => {
            if (e.target.closest('.cart-item-remove')) {
                const cartItem = e.target.closest('.cart-item');
                if (cartItem) {
                    cartItem.remove();
                    updateCartCount();
                }
            }
        });
    }
    
    // Update cart count
    function updateCartCount() {
        const cartCount = document.querySelector('.cart-count');
        if (!cartCount) return;
        
        const items = document.querySelectorAll('.cart-item');
        const count = items.length;
        
        cartCount.textContent = count;
        cartCount.classList.toggle('hidden', count === 0);
    }
    
    // Make updateCartCount available globally
    window.updateCartCount = updateCartCount;
    
    // Add to cart functionality
    window.addToCart = function(itemId, itemName, itemPrice, itemImage) {
        if (cartItems) {
            const cartItem = document.createElement('div');
            cartItem.className = 'cart-item';
            cartItem.innerHTML = `
                <img src="${itemImage}" alt="${itemName}" class="cart-item-img" />
                <div class="cart-item-details">
                    <div class="cart-item-name">${itemName}</div>
                    <div class="cart-item-price">$${parseFloat(itemPrice).toFixed(2)}</div>
                    <div class="cart-item-qty">Qty: 1</div>
                </div>
                <button class="cart-item-remove" aria-label="Remove item">
                    <i class="fas fa-times"></i>
                </button>
            `;
            
            cartItems.appendChild(cartItem);
            updateCartCount();
            
            if (cartMenu) {
                cartMenu.classList.add('show');
            }
            
            showToast(`${itemName} added to cart`, 'success');
        }
    };
    
    // Initialize cart count
    updateCartCount();
}

// Search Functionality
function initSearch() {
    const searchInput = document.querySelector('input[name="q"]') || document.querySelector('input[name="searchTerm"]');
    const searchSuggestions = document.querySelector('.search-suggestions');
    
    if (searchInput && searchSuggestions) {
        // Get popular searches from data attribute
        const popularSearches = searchInput.dataset.searchSuggestions?.split(',') || [];
        
        // Show suggestions on input focus
        searchInput.addEventListener('focus', () => {
            if (popularSearches.length > 0) {
                searchSuggestions.classList.remove('d-none');
            }
        });
        
        // Hide suggestions when clicking outside
        document.addEventListener('click', (e) => {
            if (!searchInput.contains(e.target) && !searchSuggestions.contains(e.target)) {
                searchSuggestions.classList.add('d-none');
            }
        });
    }
    
    // Restaurant filter functionality
    const filterForm = document.getElementById('filterForm');
    if (filterForm) {
        // Debounce function for search input
        let debounceTimer;
        const searchTermInput = document.getElementById('searchTerm');
        if (searchTermInput) {
            searchTermInput.addEventListener('input', function() {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(() => filterForm.submit(), 500);
            });
        }
        
        // Auto-submit on select changes
        const categorySelect = document.querySelector('select[name="categoryId"]');
        const sortBySelect = document.querySelector('select[name="sortBy"]');
        const openNowCheckbox = document.getElementById('openNow');
        
        if (categorySelect) categorySelect.addEventListener('change', () => filterForm.submit());
        if (sortBySelect) sortBySelect.addEventListener('change', () => filterForm.submit());
        if (openNowCheckbox) openNowCheckbox.addEventListener('change', () => filterForm.submit());
    }
}

// Restaurant Features
function initRestaurantFeatures() {
    // Restaurant Details Page
    const restaurantNav = document.querySelector('.restaurant-nav');
    const navLinks = document.querySelectorAll('.restaurant-nav .nav-link');
    const sections = document.querySelectorAll('section[id]');
    
    if (restaurantNav && navLinks.length > 0) {
        // Smooth scrolling for anchor links
        navLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                const targetId = this.getAttribute('href');
                const targetSection = document.querySelector(targetId);
                
                if (targetSection) {
                    const offsetTop = targetSection.offsetTop - 70;
                    
                    window.scrollTo({
                        top: offsetTop,
                        behavior: 'smooth'
                    });
                    
                    // Update active link
                    navLinks.forEach(link => link.classList.remove('active'));
                    this.classList.add('active');
                }
            });
        });
    }
    
    // Menu category filter
    const categoryLinks = document.querySelectorAll('.menu-category .list-group-item');
    const menuItems = document.querySelectorAll('.menu-item');
    
    if (categoryLinks.length > 0 && menuItems.length > 0) {
        categoryLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Update active category
                categoryLinks.forEach(link => link.classList.remove('active'));
                this.classList.add('active');
                
                const category = this.getAttribute('data-category');
                
                // Filter menu items
                menuItems.forEach(item => {
                    if (category === 'all' || item.getAttribute('data-category') === category) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });
            });
        });
    }
    
    // Image preview for forms
    const imageFile = document.getElementById('imageFile');
    const imagePreview = document.getElementById('imagePreview');
    
    if (imageFile && imagePreview) {
        imageFile.addEventListener('change', function(e) {
            const previewImg = imagePreview.querySelector('img');
            
            if (e.target.files && e.target.files[0]) {
                const reader = new FileReader();
                
                reader.onload = function(e) {
                    if (previewImg) {
                        previewImg.src = e.target.result;
                    }
                    imagePreview.classList.remove('d-none');
                };
                
                reader.readAsDataURL(e.target.files[0]);
            } else {
                imagePreview.classList.add('d-none');
            }
        });
    }
}
