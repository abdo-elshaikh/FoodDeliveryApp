@model FoodDeliveryApp.ViewModels.OrderViewModels.OrderCreateViewModel

@{
    ViewData["Title"] = "Checkout";
}

<div class="container py-5">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <h2 class="h3 fw-bold mb-4 text-center">Checkout</h2>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <form asp-action="Checkout" method="post" class="bg-white shadow-sm rounded p-4">
                <input type="hidden" asp-for="UserId" />

                <h4 class="mb-3">Order Summary</h4>
                @foreach (var group in Model.Items.GroupBy(i => i.RestaurantId))
                {
                    <div class="card mb-3 border-0 shadow-sm">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">@group.First().RestaurantName</h5>
                        </div>
                        <div class="card-body">
                            @foreach (var item in group)
                            {
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div class="d-flex align-items-center">
                                        <img src="@item.ImageUrl" alt="@item.Name" class="rounded" style="width: 60px; height: 60px; object-fit: cover; margin-right: 15px;" />
                                        <div>
                                            <h6 class="mb-1">@item.Name</h6>
                                            <small class="text-muted">Quantity: @item.Quantity</small>
                                            @if (item.Customizations.Any())
                                            {
                                                <small class="d-block text-muted">
                                                    Customizations: @string.Join(", ", item.Customizations.Select(c => $"Option {c.OptionId}: Choice {c.ChoiceId} (+{c.Price:C})"))
                                                </small>
                                            }
                                        </div>
                                    </div>
                                    <span class="fw-bold">@((item.Price * item.Quantity).ToString("C"))</span>
                                </div>
                            }
                        </div>
                    </div>
                }

                <div class="mb-4">
                    <label asp-for="SelectedAddressId" class="form-label fw-semibold">Delivery Address</label>
                    <select asp-for="SelectedAddressId" class="form-select" required>
                        <option value="">Select Address</option>
                        @foreach (var address in Model.Addresses)
                        {
                            <option value="@address.Id">@address.FullAddress</option>
                        }
                    </select>
                    <span asp-validation-for="SelectedAddressId" class="text-danger"></span>
                    <a asp-controller="Account" asp-action="ManageAddresses" class="btn btn-link mt-2">Add New Address</a>
                </div>

                <div class="mb-4">
                    <label asp-for="SpecialInstructions" class="form-label fw-semibold">Special Instructions</label>
                    <textarea asp-for="SpecialInstructions" class="form-control" rows="3" placeholder="Any special requests?"></textarea>
                </div>

                <div class="mb-4">
                    <label asp-for="SelectedPaymentMethod" class="form-label fw-semibold">Payment Method</label>
                    <select asp-for="SelectedPaymentMethod" class="form-select" asp-items="@(new SelectList(Model.AvailablePaymentMethods, "Type", "DisplayName"))" onchange="togglePaymentMethodId(this)">
                        <option value="">Select Payment Method</option>
                    </select>
                    <span asp-validation-for="SelectedPaymentMethod" class="text-danger"></span>
                </div>

                <div class="mb-4" id="paymentMethodIdContainer" style="display: none;">
                    <label asp-for="SelectedPaymentMethodId" class="form-label fw-semibold">Select Card</label>
                    <select asp-for="SelectedPaymentMethodId" class="form-select" asp-items="@(new SelectList(Model.AvailablePaymentMethods.Where(m => m.Type != PaymentMethodType.CashOnDelivery), "Id", "DisplayName"))">
                        <option value="">Select Card</option>
                    </select>
                    <span asp-validation-for="SelectedPaymentMethodId" class="text-danger"></span>
                </div>

                <div class="d-flex justify-content-end">
                    <a asp-controller="Cart" asp-action="Index" class="btn btn-outline-secondary rounded-pill me-2">Back to Cart</a>
                    <button type="submit" class="btn btn-primary rounded-pill">Place Order</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function togglePaymentMethodId(select) {
            const container = document.getElementById('paymentMethodIdContainer');
            container.style.display = select.value === '@PaymentMethodType.CashOnDelivery' ? 'none' : 'block';
        }
    </script>
}