@using FoodDeliveryApp.ViewModels.MenuItem
@using FoodDeliveryApp.ViewModels.Review
@model FoodDeliveryApp.ViewModels.Restaurant.RestaurantDetailViewModel

@{
    ViewData["Title"] = Model.Restaurant.Name;
}

<!-- Restaurant Header -->
<section class="restaurant-header position-relative">
    <div class="restaurant-cover position-relative">
        <img src="@Model.Restaurant.ImageUrl" alt="@Model.Restaurant.Name" class="cover-image w-100" style="height: 500px; object-fit: cover; filter: brightness(0.8);" loading="lazy">
        <div class="cover-overlay bg-dark opacity-75"></div>
    </div>
    <div class="container position-relative" style="margin-top: -150px;">
        <div class="restaurant-info-card bg-white rounded-4 shadow-lg p-4" data-aos="fade-up">
            <div class="row align-items-center">
                <div class="col-md-2">
                    <div class="restaurant-logo">
                        <img src="@Model.Restaurant.ImageUrl" alt="@Model.Restaurant.Name"
                            class="img-fluid rounded-circle border border-4 border-white shadow" style="width: 150px; height: 150px; object-fit: cover;" loading="lazy">
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <h1 class="mb-3 fw-bold">@Model.Restaurant.Name</h1>
                            <div class="d-flex align-items-center mb-3">
                                <div class="rating me-2">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="fas fa-star @(i <= Model.Restaurant.Rating ? "text-warning" : "text-muted")"></i>
                                    }
                                </div>
                                <span class="text-muted">(@Model.Restaurant.ReviewCount reviews)</span>
                                @if (Model.Restaurant.IsOpen)
                                {
                                    <span class="badge bg-success ms-3">Open Now</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger ms-3">Closed</span>
                                }
                            </div>
                            <p class="text-muted mb-3">
                                <i class="fas fa-map-marker-alt me-2"></i>
                                @Model.Restaurant.Address.Street, @Model.Restaurant.Address.City, @Model.Restaurant.Address.State @Model.Restaurant.Address.PostalCode
                            </p>
                            <div class="d-flex gap-4 text-muted">
                                <span><i class="fas fa-clock me-2"></i>@Model.Restaurant.DeliveryTime</span>
                                <span><i class="fas fa-truck me-2"></i>$@Model.Restaurant.DeliveryFee delivery fee</span>
                                <span><i class="fas fa-phone me-2"></i>@Model.Restaurant.PhoneNumber</span>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-primary btn-lg px-4 py-2" onclick="openOrderModal()">
                                <i class="fas fa-shopping-cart me-2"></i>Order Now
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Promotions Section -->
@if (Model.Promotions?.Any() == true)
{
    <section class="container my-5">
        <h2 class="mb-4 fw-bold">Current Offers</h2>
        <div class="row g-4">
            @foreach (var promotion in Model.Promotions.Where(p => p.IsActive && p.EndDate > DateTime.Now))
            {
                <div class="col-md-4">
                    <div class="card h-100 border-0 shadow-sm hover-lift">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="promotion-icon bg-primary bg-opacity-10 rounded-circle p-3 me-3">
                                    <i class="fas fa-tag text-primary fa-2x"></i>
                                </div>
                                <div>
                                    <h5 class="card-title mb-1">@promotion.Description</h5>
                                    <p class="text-muted small mb-0">Valid until @promotion.EndDate.ToString("MMM dd, yyyy")</p>
                                </div>
                            </div>
                            <div class="promotion-code p-3 bg-light rounded mb-3">
                                <p class="mb-0">Use code: <strong class="text-primary">@promotion.Code</strong></p>
                            </div>
                            @if (promotion.MinimumOrderAmount > 0)
                            {
                                <p class="text-muted small mb-0">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Minimum order: $@promotion.MinimumOrderAmount
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
}

<!-- Menu Section -->
<section class="container my-5">
    <div class="row">
        <!-- Categories Sidebar -->
        <div class="col-md-3">
            <div class="card border-0 shadow-sm sticky-top" style="top: 20px;">
                <div class="card-body">
                    <h5 class="card-title mb-3 fw-bold">Categories</h5>
                    <div class="list-group list-group-flush">
                        @foreach (var category in Model.Categories)
                        {
                            <a href="#category-@category.Id" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                @category.Name
                                <span class="badge bg-primary rounded-pill">@category.ItemCount</span>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Menu Items -->
        <div class="col-md-9">
            @foreach (var category in Model.Categories)
            {
                <div id="category-@category.Id" class="mb-5">
                    <h3 class="mb-4 fw-bold">@category.Name</h3>
                    <div class="row g-4">
                        @foreach (var item in category.MenuItems)
                        {
                            <div class="col-md-6">
                                <div class="card h-100 border-0 shadow-sm hover-lift">
                                    <div class="position-relative">
                                        <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
                                        @if (item.IsPopular)
                                        {
                                            <span class="badge bg-warning position-absolute top-0 end-0 m-2">Popular</span>
                                        }
                                        @if (item.Discount > 0)
                                        {
                                            <span class="badge bg-danger position-absolute top-0 start-0 m-2">@item.Discount% OFF</span>
                                        }
                                    </div>
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h5 class="card-title mb-0">@item.Name</h5>
                                            <div class="d-flex align-items-center">
                                                @if (item.IsSpicy)
                                                {
                                                    <i class="fas fa-pepper-hot text-danger me-2" title="Spicy"></i>
                                                }
                                                @if (item.IsVegetarian)
                                                {
                                                    <i class="fas fa-leaf text-success me-2" title="Vegetarian"></i>
                                                }
                                                @if (item.IsVegan)
                                                {
                                                    <i class="fas fa-seedling text-success" title="Vegan"></i>
                                                }
                                            </div>
                                        </div>
                                        <p class="card-text text-muted">@item.Description</p>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div>
                                                @if (item.Discount > 0)
                                                {
                                                    <span class="text-decoration-line-through text-muted me-2">$@item.OriginalPrice</span>
                                                }
                                                <span class="h5 mb-0">$@item.Price</span>
                                            </div>
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-star text-warning me-2"></i>
                                                <span class="fw-bold">@item.Rating.ToString("F1")</span>
                                            </div>
                                        </div>
                                        <hr class="my-2" />
                                        @await Html.PartialAsync("_AddToCart", item.Id)
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</section>


<!-- Reviews Section -->
<section class="container my-5">
    <h2 class="mb-4 fw-bold">Customer Reviews</h2>
    <div class="row">
        <div class="col-md-4">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body text-center">
                    <h1 class="display-4 mb-2 fw-bold">@Model.Restaurant.Rating.ToString("F1")</h1>
                    <div class="rating mb-3">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= Model.Restaurant.Rating ? "text-warning" : "text-muted")"></i>
                        }
                    </div>
                    <p class="text-muted">Based on @Model.Restaurant.ReviewCount reviews</p>
                </div>
            </div>
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title mb-3 fw-bold">Rating Distribution</h5>
                    @for (int i = 5; i >= 1; i--)
                    {
                        var count = Model.Restaurant.RatingDistribution.ContainsKey(i) ? Model.Restaurant.RatingDistribution[i] : 0;
                        var percentage = Model.Restaurant.ReviewCount > 0 ? (count * 100.0 / Model.Restaurant.ReviewCount) : 0;
                        <div class="mb-2">
                            <div class="d-flex align-items-center">
                                <span class="me-2">@i <i class="fas fa-star text-warning"></i></span>
                                <div class="progress flex-grow-1" style="height: 8px;">
                                    <div class="progress-bar bg-warning" role="progressbar" style="width: @percentage%"></div>
                                </div>
                                <span class="ms-2">@count</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row g-4">
                @foreach (var review in Model.Reviews)
                {
                    <div class="col-12">
                        <div class="card border-0 shadow-sm">
                            <div class="card-body">
                                <div class="d-flex align-items-center mb-3">
                                    @if(!string.IsNullOrEmpty(review.UserImageUrl))
                                    {
                                        <img src="@review.UserImageUrl" alt="@review.UserName" class="rounded-circle me-3" style="width: 48px; height: 48px; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="rounded-circle bg-light me-3 d-flex align-items-center justify-content-center" style="width: 48px; height: 48px;">
                                            <i class="fas fa-user text-muted"></i>
                                        </div>
                                    }
                                    <div>
                                        <h6 class="mb-1 fw-bold">@review.UserName</h6>
                                        <div class="rating">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                            }
                                        </div>
                                    </div>
                                    <small class="text-muted ms-auto">@review.CreatedAt.ToString("MMM dd, yyyy")</small>
                                </div>
                                <p class="review-text mb-0">@review.Content</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
            @if (Model.Reviews?.Count > 5)
            {
                <div class="text-center mt-4">
                    <button class="btn btn-outline-primary px-4" onclick="loadMoreReviews()">
                        Load More Reviews
                    </button>
                </div>
            }
        </div>
    </div>
</section>

<!-- Order Modal -->
<div class="modal fade" id="orderModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Your Order</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="cartItems">
                    <!-- Cart items will be dynamically added here -->
                </div>
                <div class="border-top pt-3 mt-3">
                    <div class="d-flex justify-content-between mb-2">
                        <span>Subtotal</span>
                        <span id="subtotal">$0.00</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Delivery Fee</span>
                        <span>$@Model.Restaurant.DeliveryFee</span>
                    </div>
                    <div class="d-flex justify-content-between mb-2">
                        <span>Tax (@Model.Restaurant.TaxRate%)</span>
                        <span id="tax">$0.00</span>
                    </div>
                    <div class="d-flex justify-content-between fw-bold">
                        <span>Total</span>
                        <span id="total">$0.00</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Continue Shopping</button>
                <button type="button" class="btn btn-primary" onclick="placeOrder()">Place Order</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .hover-lift {
            transition: transform 0.2s ease-in-out;
        }
        
        .hover-lift:hover {
            transform: translateY(-5px);
        }
        
        .promotion-icon {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .promotion-code {
            background-color: #f8f9fa;
            border: 1px dashed #dee2e6;
        }
        
        .review-text {
            line-height: 1.6;
        }
        
        .rating i {
            font-size: 1.1rem;
        }
        
        .badge {
            font-weight: 500;
            padding: 0.5em 0.8em;
        }
    </style>
}

@section Scripts {
    <script>
        // Auto-hide alerts after 3 seconds
        $(document).ready(function() {
            setTimeout(function() {
                $('.alert').alert('close');
            }, 3000);
        });

        function incrementQuantity(button) {
            const input = button.parentElement.querySelector('input');
            const value = parseInt(input.value);
            if (value < 20) input.value = value + 1;
        }

        function decrementQuantity(button) {
            const input = button.parentElement.querySelector('input');
            const value = parseInt(input.value);
            if (value > 1) input.value = value - 1;
        }

       
        function openOrderModal() {
            var modal = new bootstrap.Modal(document.getElementById('orderModal'));
            modal.show();
        }

        function openMenuItemModal(itemId) {
            // Fetch menu item details
            fetch(`/api/menuitems/${itemId}`)
                .then(response => response.json())
                .then(data => {
                    // Update modal content
                    const modal = new bootstrap.Modal(document.getElementById('menuItemModal'));
                    modal.show();
                })
                .catch(error => {
                    console.error('Error fetching menu item:', error);
                });
        }

        
    </script>
}


@* @await Html.PartialAsync("_MenuItemModal", Model.MenuItems) *@
