@model FoodDeliveryApp.ViewModels.RestaurantViewModels.RestaurantDetailViewModel
@{
    ViewData["Title"] = $"{Model.Restaurant.Name} Details";
    ViewData["ActiveMenu"] = "Restaurants";
}

@section Styles {
    
    <style>
        
        .hero-bg {
            background: linear-gradient(to bottom, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.2)), url('@Model.Restaurant.ImageUrl');
            background-size: cover;
            background-position: center;
            min-height: 60vh;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }

        .sticky-nav {
            position: sticky;
            top: 0;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(8px);
        }

        .card {
            border: none;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .card:hover {
                transform: translateY(-4px);
                box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
            }

        .fab {
            position: fixed;
            bottom: 1.5rem;
            right: 1.5rem;
            z-index: 1030;
        }

        .scroll-indicator {
            animation: bounce 2s infinite;
        }
        @@keyframes bounce {
            0%, 20%, 50%, 80%, 100%

        {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-10px);
        }

        60% {
            transform: translateY(-5px);
        }

        }

        .star-rating .fa-star {
            color: #dee2e6;
            transition: color 0.2s ease;
        }

            .star-rating .fa-star.active {
                color: #ffc107;
            }

        .reviews-container {
            max-height: 400px;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #ced4da #f8f9fa;
        }

        .btn-sm {
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
        }
        @@media (max-width: 576px) {
            .hero-bg

        {
            min-height: 50vh;
            background-attachment: scroll;
        }

        .card-grid > .row {
            --bs-columns: 1;
        }

        }
    </style>
}

<!-- Sticky Navigation -->
<nav class="sticky-nav navbar navbar-expand-lg navbar-light shadow-sm py-3">
    <div class="container">
        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link text-gray-600 hover:text-primary" href="#overview" aria-label="Go to overview">Overview</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-gray-600 hover:text-primary" href="#menu" aria-label="Go to menu">Menu</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-gray-600 hover:text-primary" href="#promotions" aria-label="Go to promotions">Promotions</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-gray-600 hover:text-primary" href="#reviews" aria-label="Go to reviews">Reviews</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Hero Section -->
<section class="hero-bg text-white py-16 px-4">
    <div class="container">
        <h1 id="restaurantHeading" class="display-5 fw-bold mb-4">@Model.Restaurant.Name</h1>
        <p class="lead mb-5 mx-auto" style="max-width: 600px;" id="restaurantDescription">@Model.Restaurant.Description</p>
        <div class="d-flex justify-content-center gap-3">
            @if (!string.IsNullOrEmpty(Model.Restaurant.WebsiteUrl))
            {
                <a href="@Model.Restaurant.WebsiteUrl" target="_blank" class="btn btn-primary btn-sm rounded-pill" aria-label="Visit restaurant website">
                    <i class="fas fa-globe me-2"></i> Website
                </a>
            }
            @if (!string.IsNullOrEmpty(Model.Restaurant.LocationUrl))
            {
                <a href="@Model.Restaurant.LocationUrl" target="_blank" class="btn btn-info btn-sm rounded-pill" aria-label="View restaurant location on map">
                    <i class="fas fa-map-marker-alt me-2"></i> Map
                </a>
            }
        </div>
        <div class="mt-5">
            <a href="#overview" class="text-white scroll-indicator" aria-label="Scroll to overview">
                <i class="fas fa-chevron-down fs-5"></i>
            </a>
        </div>
    </div>
</section>

<!-- Main Content -->
<div class="container py-5">
    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show mb-4 animate__animated animate__fadeIn" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show mb-4 animate__animated animate__fadeIn" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close alert"></button>
        </div>
    }

    <!-- Overview Section -->
    <section id="overview" class="mb-5">
        <h2 class="h3 fw-semibold mb-4 text-dark">Overview</h2>
        <div class="card rounded-3 p-4">
            <div class="row g-4">
                <div class="col-md-6">
                    <p class="text-muted mb-2"><strong>Category:</strong> @Model.Restaurant.CategoryName</p>
                    <p class="text-muted mb-2"><strong>Rating:</strong> <span class="text-warning">@Model.Restaurant.Rating.ToString("0.0") <i class="fas fa-star"></i></span></p>
                    <p class="text-muted mb-2"><strong>Address:</strong> @Model.Restaurant.Address, @Model.Restaurant.City, @Model.Restaurant.State @Model.Restaurant.PostalCode</p>
                    <p class="text-muted"><strong>Phone:</strong> <a href="tel:@Model.Restaurant.PhoneNumber" class="text-primary text-decoration-none">@Model.Restaurant.PhoneNumber</a></p>
                </div>
                <div class="col-md-6">
                    <p class="text-muted mb-2"><strong>Hours:</strong> @Model.Restaurant.OpeningTime.ToString("hh\\:mm") - @Model.Restaurant.ClosingTime.ToString("hh\\:mm")</p>
                    <p class="text-muted mb-2"><strong>Delivery Fee:</strong> @Model.Restaurant.DeliveryFee.ToString("C")</p>
                    <p class="text-muted"><strong>Status:</strong> <span class="badge @(Model.Restaurant.IsOpen ? "bg-success" : "bg-danger")">@(Model.Restaurant.IsOpen ? "Open" : "Closed")</span></p>
                </div>
            </div>
        </div>
    </section>

    <!-- Menu Section -->
    <section id="menu" class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="h3 fw-semibold text-dark">Menu</h2>

            <a href="@Url.Action("ByRestaurant", "MenuItems", new { RestaurantId = Model.Restaurant.Id })" class="btn btn-warning btn-sm rounded-pill" >
                <i class="fas fa-utensils me-2"></i> View All Menu Items
            </a>
            
        </div>
        @if (Model.MenuItems.Any())
        {
            <div class="card-grid row row-cols-1 row-cols-sm-2 row-cols-lg-3 g-4">
                @foreach (var item in Model.MenuItems)
                {
                    <div class="col">
                        <div class="card rounded-3 overflow-hidden">
                            <img src="@item.ImageUrl" class="card-img-top" style="height: 160px; object-fit: cover;" alt="@item.Name" loading="lazy" />
                            <div class="card-body p-3">
                                <h5 class="card-title fw-semibold text-dark mb-2 fs-6">@item.Name</h5>
                                <p class="card-text text-muted small mb-3 text-truncate">@item.Description</p>
                                <p class="card-text fw-bold text-dark small mb-3">@item.Price.ToString("C")</p>
                                <div class="d-flex gap-2">
                                    <form asp-action="AddToCart" asp-route-itemId="@item.Id" method="post" class="d-flex align-items-center">
                                        <input type="number" name="quantity" value="1" min="1" class="form-control form-control-sm me-1" style="width: 70px;" aria-label="Quantity" />
                                        <button type="submit" class="btn btn-primary btn-sm rounded-pill" data-bs-toggle="modal" data-bs-target="#cartModal" aria-label="Add to cart">
                                            <i class="fas fa-cart-plus"></i>
                                        </button>
                                    </form>
                                    <a asp-action="Details" asp-controller="MenuItems" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm rounded-pill" aria-label="View menu item details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">No menu items available.</p>
        }
    </section>

    <!-- Promotions Section -->
    <section id="promotions" class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="h3 fw-semibold text-dark">Promotions</h2>
            @if (User.IsInRole("Admin") || User.IsInRole("Owner"))
            {
                <a href="@Url.Action("Promotions", "Restaurants", new { restaurantId = Model.Restaurant.Id })" class="btn btn-info btn-sm rounded-pill" aria-label="Manage promotions">
                    <i class="fas fa-megaphone me-2"></i> Manage Promotions
                </a>
            }
        </div>
        @if (Model.Promotions.Any())
        {
            <div class="row row-cols-1 row-cols-md-2 g-4">
                @foreach (var promo in Model.Promotions)
                {
                    <div class="col">
                        <div class="card rounded-3 p-3">
                            <h5 class="card-title fw-semibold text-dark mb-2 fs-6">@promo.Title</h5>
                            <p class="card-text text-muted small mb-2 text-truncate">@promo.Description</p>
                            <p class="card-text text-muted small mb-2"><strong>Code:</strong> <span class="badge bg-primary">@promo.PromoCode</span></p>
                            <p class="card-text text-muted small mb-2"><strong>Discount:</strong> @(promo.DiscountPercentage > 0 ? $"{promo.DiscountPercentage}%" : "N/A")</p>
                            <p class="card-text text-muted small mb-3"><strong>Valid Until:</strong> @promo.ValidUntil.ToString("d")</p>
                            <form asp-action="ApplyPromotion" asp-route-code="@promo.PromoCode" asp-route-returnUrl="@Url.Action("Details", new { id = Model.Restaurant.Id })" method="post">
                                <button type="submit" class="btn btn-success btn-sm rounded-pill" aria-label="Apply promotion">
                                    <i class="fas fa-tag me-1"></i> Apply
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <p class="text-muted">No promotions available.</p>
        }
    </section>

    <!-- Reviews Section -->
    <section id="reviews" class="mb-5">
        <h2 class="h3 fw-semibold mb-4 text-dark">Reviews</h2>
        @if (Model.Reviews.Any())
        {
            <div class="reviews-container">
                @foreach (var review in Model.Reviews.Take(5))
                {
                    <div class="card rounded-3 p-3 mb-3">
                        <div class="d-flex align-items-center mb-2">
                            <h6 class="card-title fw-semibold text-dark flex-grow-1 mb-0 small">@review.CustomerName</h6>
                            <div class="star-rating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="fas fa-star fs-6 @(i <= review.Rating ? "active" : "")"></i>
                                }
                            </div>
                        </div>
                        <p class="card-text text-muted small mb-2">@review.Comment</p>
                        <small class="text-muted">@review.CreatedAt.ToString("d")</small>
                    </div>
                }
            </div>
            @if (Model.Reviews.Count() > 5)
            {
                <nav aria-label="Reviews pagination" class="mt-4">
                    <ul class="pagination pagination-sm justify-content-center">
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Previous page">Previous</a>
                        </li>
                        <li class="page-item active">
                            <a class="page-link" href="#" aria-label="Page 1">1</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Page 2">2</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Next page">Next</a>
                        </li>
                    </ul>
                </nav>
            }
        }
        else
        {
            <p class="text-muted">No reviews yet.</p>
        }
    </section>

    <!-- Admin Delete Action -->
    @if (Model.IsAdminOrOwner)
    {
        <section class="mb-5">
            <h2 class="h3 fw-semibold mb-4 text-dark">Admin Actions</h2>
            <button type="button" class="btn btn-danger btn-sm rounded-pill" data-bs-toggle="modal" data-bs-target="#deleteModal" aria-label="Delete restaurant" disabled="@User.IsInRole("Owner")">
                <i class="fas fa-trash me-2"></i> Delete Restaurant
            </button>
            <a class="btn btn-info btn-sm rounded-pill" asp-action="Edit" asp-controller="Restaurant" asp-route-id="@Model.Restaurant.Id">
                <i class="fas fa-edit me-2"></i> Edit Restaurant
            </a>
            <a class="btn btn-secondary btn-sm rounded-pill" asp-action="Index" asp-controller="Restaurant" aria-label="Back to restaurant list">
                <i class="fas fa-arrow-left me-2"></i> Back to List
            </a>
        </section>
    }
</div>

<!-- Floating Action Button -->
<button class="fab btn btn-primary btn-floating rounded-circle d-md-none" onclick="window.location.href='#menu'" aria-label="Go to menu">
    <i class="fas fa-utensils fs-5"></i>
</button>

<!-- Cart Confirmation Modal -->
<div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-3">
            <div class="modal-header border-0">
                <h5 class="modal-title fs-6 fw-semibold" id="cartModalLabel">Added to Cart</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close modal"></button>
            </div>
            <div class="modal-body text-muted small">
                The item has been added to your cart.
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill" data-bs-dismiss="modal">Continue Shopping</button>
                <a href="@Url.Action("Cart", "Cart")" class="btn btn-primary btn-sm rounded-pill" aria-label="View cart">View Cart</a>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
@if (User.IsInRole("Admin"))
{
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-3">
                <div class="modal-header border-0">
                    <h5 class="modal-title fs-6 fw-semibold" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close modal"></button>
                </div>
                <div class="modal-body text-muted small">
                    Are you sure you want to delete <strong>@Model.Restaurant.Name</strong>? This action cannot be undone.
                </div>
                <div class="modal-footer border-0">
                    <form asp-action="Delete" asp-route-id="@Model.Restaurant.Id" method="post">
                        <button type="submit" class="btn btn-danger btn-sm rounded-pill">Delete</button>
                        <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill" data-bs-dismiss="modal">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Smooth scrolling
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function(e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        // AJAX for Add to Cart
        const cartModal = new bootstrap.Modal(document.getElementById('cartModal'));
        document.querySelectorAll('form[action*="AddToCart"]').forEach(form => {
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                fetch(this.action, {
                    method: 'POST',
                    body: new FormData(this)
                }).then(response => {
                    if (response.ok) {
                        cartModal.show();
                    } else {
                        alert('Failed to add item to cart.');
                    }
                }).catch(() => alert('An error occurred.'));
            });
        });
    </script>
}