@model FoodDeliveryApp.ViewModels.AccountViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Create Your Account";
    ViewData["SubTitle"] = "Join FoodFast to enjoy fast and reliable food delivery.";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<form asp-action="Register" method="post" asp-antiforgery="true" class="">
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="Email" value="@Model.Email" required />
        <div class="invalid-feedback">
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>
    <div class="mb-3 position-relative">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" name="Password" required />
        <span class="password-toggle" aria-label="Show password"><i class="bi bi-eye"></i></span>
        <div class="password-strength mt-1"></div>
        <div class="invalid-feedback">
            @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>
    <div class="mb-3">
        <label for="confirmPassword" class="form-label">Confirm Password</label>
        <input type="password" class="form-control" id="confirmPassword" name="ConfirmPassword" required />
        <div class="invalid-feedback">
            @Html.ValidationMessageFor(m => m.ConfirmPassword)
        </div>
    </div>
    <div class="mb-3">
        <label for="role" class="form-label">Role</label>
        <select class="form-select" id="role" name="Role" required>
            <option value="">Select a role</option>
            <option value="Customer">Customer</option>
            <option value="Admin">Admin</option>
        </select>
        <div class="invalid-feedback">
            @Html.ValidationMessageFor(m => m.Role)
        </div>
    </div>
    <input type="hidden" name="ReturnUrl" value="@ViewData["ReturnUrl"]" />
    <button type="submit" class="btn btn-primary w-100">Sign Up</button>
</form>

@section Scripts {
    <script src="~/js/auth.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const passwordInput = document.getElementById("password");
            const passwordToggle = document.querySelector(".password-toggle");
            const passwordStrength = document.querySelector(".password-strength");
            passwordToggle.addEventListener("click", function () {
                if (passwordInput.type === "password") {
                    passwordInput.type = "text";
                    passwordToggle.innerHTML = '<i class="bi bi-eye-slash"></i>';
                } else {
                    passwordInput.type = "password";
                    passwordToggle.innerHTML = '<i class="bi bi-eye"></i>';
                }
            });
            passwordInput.addEventListener("input", function () {
                const strength = checkPasswordStrength(passwordInput.value);
                passwordStrength.textContent = strength;
            });
        });
        function checkPasswordStrength(password) {
            if (password.length < 6) return "Weak";
            if (password.match(/[A-Z]/) && password.match(/[0-9]/)) return "Strong";
            return "Medium";
        }
    </script>
}
