@model FoodDeliveryApp.ViewModels.Account.ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
    ViewData["Subtitle"] = "Enter your new password";
    Layout = "_LayoutAccount";
}

<div class="reset-password-form">
    <form asp-action="ResetPassword" method="post" class="needs-validation" novalidate>
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
        <input asp-for="Code" type="hidden" />

        <div class="form-group">
            <label asp-for="Email" class="form-label">Email Address</label>
            <div class="input-group">
                <span class="input-group-text">
                    <i class="fas fa-envelope"></i>
                </span>
                <input asp-for="Email" class="form-control" type="email" required />
            </div>
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Password" class="form-label">New Password</label>
            <div class="password-toggle">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-lock"></i>
                    </span>
                    <input asp-for="Password" class="form-control" type="password" required />
                    <button type="button" class="password-toggle-btn" onclick="togglePassword('Password')">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
            </div>
            <span asp-validation-for="Password" class="text-danger"></span>
            <div class="password-strength mt-2">
                <div class="progress" style="height: 5px;">
                    <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                </div>
                <small class="text-muted">Password strength: <span class="strength-text">None</span></small>
            </div>
        </div>

        <div class="form-group">
            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
            <div class="password-toggle">
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-lock"></i>
                    </span>
                    <input asp-for="ConfirmPassword" class="form-control" type="password" required />
                    <button type="button" class="password-toggle-btn" onclick="togglePassword('ConfirmPassword')">
                        <i class="fas fa-eye"></i>
                    </button>
                </div>
            </div>
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary btn-block btn-lg">
            <i class="fas fa-key me-2"></i>Reset Password
        </button>
    </form>

    <div class="account-links">
        <a asp-action="Login">
            <i class="fas fa-arrow-left me-1"></i>Back to Sign In
        </a>
    </div>
</div>

@section Styles {
    <style>
        .reset-password-form {
            max-width: 400px;
            margin: 0 auto;
        }

        .input-group {
            position: relative;
        }

        .input-group-text {
            background-color: transparent;
            border-right: none;
            color: var(--text-muted);
        }

        .input-group .form-control {
            border-left: none;
        }

        .input-group .form-control:focus {
            border-color: var(--border-color);
            box-shadow: none;
        }

        .input-group:focus-within {
            box-shadow: 0 0 0 0.2rem rgba(0, 102, 204, 0.25);
            border-radius: var(--border-radius);
        }

        .input-group:focus-within .input-group-text,
        .input-group:focus-within .form-control {
            border-color: var(--primary-color);
        }

        .password-strength .progress {
            height: 5px;
            border-radius: 3px;
            background-color: var(--secondary-color);
        }

        .password-strength .progress-bar {
            transition: width 0.3s ease;
        }

        .password-strength small {
            font-size: 0.8rem;
            margin-top: 0.25rem;
        }
    </style>
}

@section Scripts {
    <script>
        // Password strength meter
        const passwordInput = document.getElementById('Password');
        const strengthBar = document.querySelector('.progress-bar');
        const strengthText = document.querySelector('.strength-text');

        passwordInput.addEventListener('input', function() {
            const password = this.value;
            let strength = 0;
            let feedback = '';

            if (password.length >= 8) strength += 25;
            if (password.match(/[a-z]/)) strength += 25;
            if (password.match(/[A-Z]/)) strength += 25;
            if (password.match(/[0-9]/)) strength += 25;

            strengthBar.style.width = strength + '%';

            if (strength <= 25) {
                strengthBar.className = 'progress-bar bg-danger';
                feedback = 'Weak';
            } else if (strength <= 50) {
                strengthBar.className = 'progress-bar bg-warning';
                feedback = 'Fair';
            } else if (strength <= 75) {
                strengthBar.className = 'progress-bar bg-info';
                feedback = 'Good';
            } else {
                strengthBar.className = 'progress-bar bg-success';
                feedback = 'Strong';
            }

            strengthText.textContent = feedback;
        });
    </script>
}
