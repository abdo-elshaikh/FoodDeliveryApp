@model FoodDeliveryApp.ViewModels.Account.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "_LayoutAccount";
}


<div class="text-center mb-4" data-aos="fade-up">
    <h1 class="h3 fw-bold">Change Password</h1>
    <p class="text-muted">Update your account password</p>
</div>

<form asp-action="ChangePassword" method="post" class="needs-validation" novalidate data-aos="fade-up" data-aos-delay="100">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

    <div class="form-floating mb-3 position-relative">
        <input asp-for="CurrentPassword" class="form-control" placeholder="Current Password" required />
        <label asp-for="CurrentPassword">Current Password</label>
        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
        <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y text-muted" 
                onclick="togglePassword('CurrentPassword')">
            <i class="fas fa-eye"></i>
        </button>
    </div>

    <div class="form-floating mb-3 position-relative">
        <input asp-for="NewPassword" class="form-control" placeholder="New Password" required />
        <label asp-for="NewPassword">New Password</label>
        <span asp-validation-for="NewPassword" class="text-danger"></span>
        <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y text-muted" 
                onclick="togglePassword('NewPassword')">
            <i class="fas fa-eye"></i>
        </button>
        <div class="form-text">
            Password must be at least 6 characters long and contain at least one uppercase letter, one lowercase letter, and one number.
        </div>
    </div>

    <div class="form-floating mb-3 position-relative">
        <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm New Password" required />
        <label asp-for="ConfirmPassword">Confirm New Password</label>
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y text-muted" 
                onclick="togglePassword('ConfirmPassword')">
            <i class="fas fa-eye"></i>
        </button>
    </div>

    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary btn-lg">
            <i class="fas fa-key me-2"></i>Update Password
        </button>
    </div>

    <div class="text-center mt-4">
        <a asp-action="UserProfile" class="text-decoration-none">
            <i class="fas fa-arrow-left me-1"></i>Back to Profile
        </a>
    </div>
</form>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            const forms = document.querySelectorAll('.needs-validation')
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault()
                        event.stopPropagation()
                    }
                    form.classList.add('was-validated')
                }, false)
            })
        })()

        // Password visibility toggle
        function togglePassword(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector('i');
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        // Initialize AOS animations
        AOS.init({
            duration: 800,
            easing: 'ease-in-out',
            once: true
        });
    </script>
}
