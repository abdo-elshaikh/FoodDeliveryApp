@model IEnumerable<FoodDeliveryApp.Models.User>

@{
    ViewData["Title"] = "Users Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="fw-bold">Users Management</h2>
    <button class="btn btn-primary" onclick="openCreateModal()">
        <i class="bi bi-plus-lg"></i> Add New User
    </button>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">No users found.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-primary">
                <tr>
                    <th scope="col">User ID</th>
                    <th scope="col">Email</th>
                    <th scope="col">Password</th>
                    <th scope="col">Category</th>
                    <th scope="col" class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.UserId</td>
                        <td>@user.Email</td>
                        <td>@user.Password</td>
                        <td>@user.UserCategory</td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-warning me-2"
                                    onclick="openEditModal(@user.UserId, '@user.Email', '@user.Password', '@user.UserCategory')">
                                <i class="bi bi-pencil-square"></i> Edit
                            </button>
                            <a asp-action="Delete" asp-route-id="@user.UserId"
                               class="btn btn-sm btn-danger"
                               onclick="return confirm('Are you sure you want to delete this user?');">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- Create/Edit User Modal -->
<div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="userForm" method="post">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="userModalLabel">Create User</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>

                <div class="modal-body">
                    <input type="hidden" name="UserId" id="UserId" />
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" name="Email" id="Email" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="text" name="Password" id="Password" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Category</label>
                        <select class="form-select" name="UserCategory" id="UserCategory" required>
                            <option value="">Select Category</option>
                            <option value="Customer">Customer</option>
                            <option value="Employee">Employee</option>
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <abbr title="Close Modal"><i class="bi x-lg"></i></abbr> Close
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <abbr title="Save User"><i class="bi accept-policy"></i></abbr> Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const userModal = new bootstrap.Modal(document.getElementById('userModal'));
        const toastElement = new bootstrap.Toast(document.getElementById('toastMessage'));
        const form = document.getElementById('userForm');

        function showToast(message, isSuccess = true) {
            const toastDiv = document.getElementById('toastMessage');
            toastDiv.classList.remove('bg-success', 'bg-danger');
            toastDiv.classList.add(isSuccess ? 'bg-success' : 'bg-danger');
            toastDiv.querySelector('.toast-body').textContent = message;
            toastElement.show();
        }

        const openEditModal = (id, email, password, userCategory) => {
            document.getElementById('UserId').value = id;
            document.getElementById('Email').value = email;
            document.getElementById('Password').value = password;
            document.getElementById('UserCategory').value = userCategory;
            document.getElementById('userModalLabel').textContent = 'Edit User';
            // form action
            const formData = document.getElementById('userForm');
            formData.action = '/Users/Edit/' + id;
            userModal.show();
        }

        const openCreateModal = () => {
            document.getElementById('UserId').value = '';
            document.getElementById('Email').value = '';
            document.getElementById('Password').value = '';
            document.getElementById('UserCategory').value = '';
            document.getElementById('userModalLabel').textContent = 'Create User';
            // form action
            const formData = document.getElementById('userForm');
            formData.action = '/Users/Create';
            userModal.show();
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(form);
            const response = await fetch(form.action, {
                method: 'POST',
                body: formData
            });
            if (response.ok) {
                const data = await response.json();
                showToast(data.message, data.isSuccess);
                userModal.hide();
                location.reload();
            } else {
                showToast('An error occurred while saving the user.', false);
            }
        });
                
    </script>
}
