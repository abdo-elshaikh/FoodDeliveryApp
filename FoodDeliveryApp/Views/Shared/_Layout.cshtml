@{
    ViewData["Title"] = "Home";
}

<!DOCTYPE html>
<html lang="en" data-bs-theme="light">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Food Delivery App - Order delicious food from your favorite restaurants" />
    <title>@ViewData["Title"] - FoodDeliveryApp</title>

    <!-- Favicon -->
    <link rel="icon" type="image/png" href="~/images/favicon.png" />

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />

    <!-- Google Fonts -->
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300;400;500;600;700&display=swap" />

    <!-- AOS Animation Library -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" />

    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/animations.css" asp-append-version="true" />

    @await RenderSectionAsync("Styles", required: false)
</head>

<body>
    <!-- Theme Toggle -->
    <button id="themeToggle" class="theme-toggle" aria-label="Toggle theme">
        <i class="fas fa-sun"></i>
        <i class="fas fa-moon"></i>
    </button>

    <!-- Top Bar -->
    <partial name="_TopBar" />

    <!-- Navigation -->
    <partial name="_Navigation" />

    <!-- Main Content -->
    <main role="main">
        @if (IsSectionDefined("Breadcrumb"))
        {
            <div class="breadcrumb-wrapper mb-4" data-aos="fade-up">
                @RenderSection("Breadcrumb", required: false)
            </div>
        }
        @RenderBody()
    </main>

    <!-- Toast Notifications -->
    <div class="toast-container position-fixed bottom-0 end-0 p-3"></div>
    @await Html.PartialAsync("_ToastPartial")

    <!-- Footer -->
    <partial name="_Footer" />

    <!-- Back to Top Button -->
    <button id="backToTop" class="btn btn-primary back-to-top" aria-label="Back to top">
        <i class="fas fa-arrow-up"></i>
    </button>

    <!-- Scroll Progress Bar -->
    <div class="scroll-progress"></div>

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/enhanced.js" asp-append-version="true"></script>
    <script src="~/js/toast.js" asp-append-version="true"></script>

    <script>
        // Wait for DOM to be fully loaded
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize AOS
            AOS.init({
                duration: 800,
                easing: 'ease-in-out',
                once: true,
                mirror: false,
                disable: 'mobile' // Disable on mobile devices
            });

            // Theme Toggle
            const themeToggle = document.getElementById('themeToggle');
            const html = document.documentElement;

            // Check for saved theme preference
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme) {
                html.setAttribute('data-bs-theme', savedTheme);
                updateThemeIcon(savedTheme);
            }

            themeToggle.addEventListener('click', () => {
                const currentTheme = html.getAttribute('data-bs-theme');
                const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

                html.setAttribute('data-bs-theme', newTheme);
                localStorage.setItem('theme', newTheme);
                updateThemeIcon(newTheme);
            });

            function updateThemeIcon(theme) {
                const sunIcon = themeToggle.querySelector('.fa-sun');
                const moonIcon = themeToggle.querySelector('.fa-moon');

                if (theme === 'dark') {
                    sunIcon.style.display = 'none';
                    moonIcon.style.display = 'block';
                } else {
                    sunIcon.style.display = 'block';
                    moonIcon.style.display = 'none';
                }
            }

            // Back to Top Button
            const backToTopButton = document.getElementById('backToTop');

            window.addEventListener('scroll', () => {
                if (window.pageYOffset > 300) {
                    backToTopButton.classList.add('show');
                } else {
                    backToTopButton.classList.remove('show');
                }
            });

            backToTopButton.addEventListener('click', () => {
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            });

            // Search Box Animation
            const searchBox = document.querySelector('.search-box');
            if (searchBox) {
                const searchInput = searchBox.querySelector('input');
                const searchBtn = searchBox.querySelector('.search-btn');

                searchBtn.addEventListener('click', () => {
                    searchBox.classList.toggle('active');
                    if (searchBox.classList.contains('active')) {
                        searchInput.focus();
                    }
                });
            }

            // Cart Animation
            const cartLink = document.querySelector('.cart-link');
            if (cartLink) {
                cartLink.addEventListener('click', (e) => {
                    e.preventDefault();
                    cartLink.classList.add('animate');
                    setTimeout(() => {
                        cartLink.classList.remove('animate');
                        window.location.href = cartLink.href;
                    }, 300);
                });
            }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

</html>
