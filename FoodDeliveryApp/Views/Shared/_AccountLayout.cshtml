@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="FoodFast Account Management" />
    <title>@ViewBag.Title - FoodFast</title>

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap" rel="stylesheet">

    <!-- Remix Icons -->
    <link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
   <link rel="stylesheet" href="~/css/account.css" asp-append-version="true" />

    @RenderSection("styles", required: false)
</head>
<body>
    <div class="app-container">
        <!-- Navigation -->
        <nav class="navigation" id="navigation">
            <div class="nav-logo">
                <i class="ri-bike-fill nav-logo-icon"></i>
                <span class="nav-logo-text">FoodFast</span>
            </div>
            <ul class="nav-items">
                <li class="nav-item">
                    <a href="@Url.Action("Dashboard", "Account")" class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "Dashboard" ? "active" : "")">
                        <span class="nav-icon"><i class="ri-dashboard-line"></i></span>
                        <span class="nav-text">Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="@Url.Action("Orders", "Account")" class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "Orders" ? "active" : "")">
                        <span class="nav-icon"><i class="ri-shopping-bag-3-line"></i></span>
                        <span class="nav-text">My Orders</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="@Url.Action("ViewAddress", "Profile")" class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "Addresses" ? "active" : "")">
                        <span class="nav-icon"><i class="ri-map-pin-line"></i></span>
                        <span class="nav-text">Addresses</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="@Url.Action("Payment", "Account")" class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "Payment" ? "active" : "")">
                        <span class="nav-icon"><i class="ri-bank-card-line"></i></span>
                        <span class="nav-text">Payment Methods</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="@Url.Action("UserProfile", "Account")" class="nav-link @(ViewContext.RouteData.Values["action"].ToString() == "Profile" ? "active" : "")">
                        <span class="nav-icon"><i class="ri-user-line"></i></span>
                        <span class="nav-text">Profile</span>
                    </a>
                </li>

                <div class="nav-divider"></div>

                <li class="nav-item">
                    <a href="@Url.Action("ChangePassword", "Account")" class="nav-link">
                        <span class="nav-icon"><i class="ri-lock-line"></i></span>
                        <span class="nav-text">Change Password</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="@Url.Action("Logout", "Account")" class="nav-link">
                        <span class="nav-icon"><i class="ri-logout-circle-r-line"></i></span>
                        <span class="nav-text">Logout</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Mobile Menu Toggle -->
        <button class="menu-toggle" onclick="toggleMobileMenu()">
            <i class="ri-menu-line"></i>
        </button>

        <!-- Overlay -->
        <div class="overlay" id="overlay" onclick="toggleMobileMenu()"></div>

        <!-- Main Content Area -->
        <div class="content-wrapper">
           
            <!-- Alerts -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <i class="ri-check-line" style="font-size: 20px;"></i>
                    <div>@TempData["SuccessMessage"]</div>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    <i class="ri-error-warning-line" style="font-size: 20px;"></i>
                    <div>@TempData["ErrorMessage"]</div>
                </div>
            }
            @if (TempData["InfoMessage"] != null)
            {
                <div class="alert alert-info">
                    <i class="ri-information-line" style="font-size: 20px;"></i>
                    <div>@TempData["InfoMessage"]</div>
                </div>
            }

            <!-- Content -->
            @RenderBody()
        </div>
    </div>

    <!-- Theme Toggle -->
    <button class="theme-toggle" onclick="toggleDarkMode()">
        <i class="ri-moon-line" id="themeIcon"></i>
    </button>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Dark Mode Toggle
        function toggleDarkMode() {
            const body = document.body;
            const themeIcon = document.getElementById('themeIcon');
            body.classList.toggle('dark-mode');
            if (body.classList.contains('dark-mode')) {
                themeIcon.classList.replace('ri-moon-line', 'ri-sun-line');
                localStorage.setItem('theme', 'dark');
            } else {
                themeIcon.classList.replace('ri-sun-line', 'ri-moon-line');
                localStorage.setItem('theme', 'light');
            }
        }

        // Load Saved Theme
        if (localStorage.getItem('theme') === 'dark') {
            document.body.classList.add('dark-mode');
            document.getElementById('themeIcon').classList.replace('ri-moon-line', 'ri-sun-line');
        }

        // Mobile Menu Toggle
        function toggleMobileMenu() {
            const nav = document.getElementById('navigation');
            const overlay = document.getElementById('overlay');
            nav.classList.toggle('mobile-open');
            overlay.classList.toggle('show');
        }
    </script>

    @RenderSection("scripts", required: false)
</body>
</html>